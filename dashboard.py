# -*- coding: utf-8 -*-
"""Dashboard.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1GEzgFjJJSf8xpm7axn6F4pr0ALZym9cF
"""

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import streamlit as st
from babel.numbers import format_currency
import os

# Importing Databases
path = os.path.dirname(__file__)
data1_path = os.path.join(path, r"fix_customers.csv")
fix_customers_df = pd.read_csv(data1_path)

path = os.path.dirname(__file__)
data2_path = os.path.join(path, r"fix_orders.csv")
fix_orders_df = pd.read_csv(data2_path)

path = os.path.dirname(__file__)
data3_path = os.path.join(path, r"orders_customers.csv")
orders_customers_df = pd.read_csv(data3_path)

path = os.path.dirname(__file__)
data4_path = os.path.join(path, r"fix_order_reviews.csv")
order_reviews_df = pd.read_csv(data4_path)

path = os.path.dirname(__file__)
data5_path = os.path.join(path, r"fix_order_payments.csv")
order_payments_df = pd.read_csv(data5_path)

sns.set(style='dark')

fix_customers_df = pd.read_csv("fix_customers.csv")

fix_orders_df = pd.read_csv("fix_orders.csv")

orders_customers_df = pd.read_csv("orders_customers.csv")

fix_orders_reviews_df = pd.read_csv("fix_order_reviews.csv")

fix_orders_payments_df = pd.read_csv("fix_order_payments.csv")

st.sidebar.title("Data Exploration")

orders_customers_df['order_approved_at'] = pd.to_datetime(orders_customers_df['order_approved_at'])
min_date = orders_customers_df["order_approved_at"].min()
max_date = orders_customers_df["order_approved_at"].max()

with st.sidebar:
    # Menambahkan logo perusahaan
    st.image("logo.jpg", use_column_width=True)

    selected_dataset = st.sidebar.selectbox(
    "Select Dataset",
    ("Orders_Customers", "Order_Payments")
    )

# Set page title
st.title("Tokopaedi Dashboard")

# Visualizations
def visualize_by_state(df):
    bystate_df = df.groupby(by="customer_state").size().reset_index(name='customer_count')
    bystate_df = bystate_df.sort_values(by='customer_count', ascending=False)  # Sorting by customer_count

    # Plotting
    fig, ax = plt.subplots(figsize=(10, 6))
    ax.bar(bystate_df["customer_state"], bystate_df["customer_count"], color='skyblue')
    ax.set_xlabel('State Code')
    ax.set_ylabel('Customer Count')
    ax.set_title('Number of Customers by State (Sorted)')
    ax.tick_params(axis='x', rotation=45)
    plt.tight_layout()

    # Displaying the plot using Streamlit
    st.subheader("Number of Customers by State (Sorted)")
    st.pyplot(fig)
    st.caption("Grafik ini menampilkan jumlah pelanggan berdasarkan negara bagian, diurutkan dari yang terbanyak. Data yang lebih tinggi menunjukkan bahwa ada lebih banyak pelanggan dari negara bagian tersebut.")

def visualize_by_payment_type(df):
    payment_counts_df = df.groupby(by="payment_type").size().reset_index(name='transaction_count')
    payment_counts_df = payment_counts_df.sort_values(by='transaction_count', ascending=False)  # Sorting by transaction_count

    # Plotting
    fig, ax = plt.subplots(figsize=(8, 6))
    colors = plt.cm.tab10(range(len(payment_counts_df)))
    ax.bar(payment_counts_df["payment_type"], payment_counts_df["transaction_count"], color=colors)
    ax.set_xlabel('Payment Type')
    ax.set_ylabel('Number of Transactions')
    ax.set_title('Number of Transactions by Payment Type (Sorted)')
    ax.tick_params(axis='x', rotation=45)
    plt.tight_layout()

    # Displaying the plot using Streamlit
    st.subheader("Number of Transactions by Payment Type (Sorted)")
    st.pyplot(fig)
    st.caption("Grafik ini menampilkan jumlah transaksi berdasarkan jenis pembayaran, diurutkan dari yang terbanyak. Data yang lebih tinggi menunjukkan bahwa jenis pembayaran tersebut lebih sering digunakan.")

def visualize_by_order_status(df):
    bystatus_df = df.groupby(by="order_status").size().reset_index(name='customer_count')
    bystatus_df = bystatus_df.sort_values(by='customer_count', ascending=False)
    status_customer_count = df.groupby(by="order_status")["customer_id"].count()

    # Plotting
    fig, ax = plt.subplots(figsize=(10, 6))
    colors = plt.cm.tab10(range(len(status_customer_count)))
    status_customer_count.sort_values().plot(kind='barh', color=colors, ax=ax)
    ax.set_xlabel('Number of Customers')
    ax.set_ylabel('Order Status')
    ax.set_title('Number of Customers by Order Status')
    plt.tight_layout()

    # Displaying the plot using Streamlit
    st.subheader("Number of Customers by Order Status")
    st.pyplot(fig)
    st.caption("Grafik ini menampilkan jumlah pelanggan berdasarkan status pesanan. Data yang lebih tinggi menunjukkan bahwa pesanan dengan status tersebut melibatkan lebih banyak pelanggan.")

if selected_dataset == "Orders_Customers":
    visualize_by_state(orders_customers_df)
    visualize_by_order_status(orders_customers_df)

elif selected_dataset == "Order_Payments":
    visualize_by_payment_type(order_payments_df)
